---
- hosts: all
  become: true
  gather_facts: false
  vars:
    tun_name: tun0
    tun_ip_client: "10.0.0.4/24"
    tun_ip_server: "10.0.0.3/24"
    server: 165.232.155.80 
    cliente: localhost
  pre_tasks:

  - add_host:
      hostname: "{{ server }}"
      groups: server
      ansible_ssh_extra_args: '-o StrictHostKeyChecking=no'
    when: server is defined

  - add_host:
      hostname: "{{ cliente }}"
      groups: client
      ansible_connection: local
    when: cliente is defined

  - block:
    - setup:
        gather_subset:
          - '!all'
          - '!min'
          - network
      async: 100
      poll: 1

    - set_fact:
        iface_main: "{{ ansible_default_ipv4.interface }}"

    - find:
        paths: /etc/NetworkManager/system-connections
        contains: "{{ iface_main }}"
        file_type: file
        read_whole_file: true
        recurse: true
      register: content

    - set_fact:
        iface_file_main: "{{ content.files | map(attribute='path') | join }}"

    - lineinfile:
        path: "{{ iface_file_main }}"
        line: "routes1={{ server }},{{ ansible_default_ipv4.gateway }}"
        insertafter: '^\[ipv4\]'
      notify: 
        - "Recargar systemd"
        - "Reiniciar servicio de NetworkManager"

    - meta: flush_handlers

    delegate_to: "{{ cliente }}"
    run_once: true

  tasks:

  - lineinfile:
      path: /etc/ssh/sshd_config
      line: "PermitTunnel yes\nAllowTcpForwarding yes"
    notify: "Reiniciar servicio ssh"

  - meta: flush_handlers

  - sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      state: present
      sysctl_set: true
      reload: true

  - wait_for:
      path: /usr/lib/systemd/system/firewalld.service
      timeout: 300

  - systemd:
      name: firewalld
      state: started
      enabled: true

  - firewalld:
      zone: public
      masquerade: true
      state: enabled
      permanent: true
      immediate: true

  - template:
      src: ssh-tunel.service.j2
      dest: /etc/systemd/system/ssh-tunnel.service
      mode: '0644'
      owner: root
      group: root
    vars:
      tunel_name: "{{ tun_name }}"
      ssh_user: "yagami"
      server_ip: "{{ server }}"
      tunel_any: "{{ tun_name[-1] }}"
    delegate_to: "{{ cliente }}"

  - template:
      src: tun0.nmconnection.j2
      dest: /etc/NetworkManager/system-connections/tun0.nmconnection
      owner: root
      group: root
      mode: '0600'
    notify:
      - "Recargar systemd"
      - "Reiniciar servicio de NetworkManager"
      - "Habilitar e iniciar servicio de tunel"
    delegate_to: "{{ item }}"
    loop:
      - "{{ server }}"
      - "{{ cliente }}"
    vars:
      target: "{{ item }}"

  - meta: flush_handlers
    
  handlers:

  - systemd:
      name: sshd
      state: restarted
    listen: "Reiniciar servicio ssh"

  - name: Recargar systemd
    systemd:
      daemon_reload: true

  - name: Reiniciar servicio de NetworkManager
    systemd:
      name: NetworkManager
      state: restarted 
    delegate_to: "{{ item }}"
    loop:
      - "{{ server }}"
      - "{{ cliente }}"

  - name: Habilitar e iniciar servicio de tunel
    systemd:
      name: ssh-tunnel
      state: started
      enabled: true
    delegate_to: "{{ cliente }}"
...
